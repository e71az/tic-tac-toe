#!/usr/bin/env ruby

@zones = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
@first_player_symbol = 'X'
@second_player_symbol = 'O'

def board
  puts ''
  @zones.each { |value| puts value.to_s.tr(',', ' ') }
  puts ''
end

def change_value(input, player_sym) # rubocop:disable Metrics/CyclomaticComplexity
  case input
  when 1
    @zones[0][0] = player_sym
  when 2
    @zones[0][1] = player_sym
  when 3
    @zones[0][2] = player_sym
  when 4
    @zones[1][0] = player_sym
  when 5
    @zones[1][1] = player_sym
  when 6
    @zones[1][2] = player_sym
  when 7
    @zones[2][0] = player_sym
  when 8
    @zones[2][1] = player_sym
  when 9
    @zones[2][2] = player_sym
  end
end

def decide_winner
  if @zones[0][0] == (@first_player_symbol || @second_player_symbol) && @zones[1][0] == (@first_player_symbol || @second_player_symbol) && @zones[2][0] == (@first_player_symbol || @second_player_symbol)
    puts 'ALGUIEN GANO'
  end
  # This function will evaluate which player won or if it was a draft and then return true or false respectively.
  # Proceeds to exit the while loop if true
end

# def verify_input(player_input, player_name)
#   # Verifies if the position input of the players is already taken and if it is valid (1-9). Proceeds to ask again
#   # for a valid input in case that the input is not valid.
#   # This function will take as parameters player_input and player_name
# end

p 'What is the first player name?'
first_player_name = gets.chomp

p 'What is the second player name?'
second_player_name = gets.chomp

current_player = 1

turns = 0
numbers_selected = []

while turns < 9
  puts ''
  p 'This is the Tic-Tac-Toe board'

  board
  if current_player == 1

    print "Your turn, select a place to insert your symbol #{first_player_name} => "
    player1_input = gets.chomp.to_i

    # This while will be inside the verify_input function

    while numbers_selected.include?(player1_input) || (player1_input.to_i < 1) || (player1_input.to_i > 9)
      print "Another place please #{first_player_name} => "
      player1_input = gets.chomp.to_i
    end
    # verify_input

    change_value(player1_input, @first_player_symbol)
    numbers_selected << player1_input.to_i
    current_player = 2

  else

    print "Your turn, select a place to insert your symbol #{second_player_name} => "
    player2_input = gets.chomp.to_i

    # This while will be inside the verify_input function

    while numbers_selected.include?(player2_input) || (player2_input.to_i < 1) || (player2_input.to_i > 9)
      print "Another place please #{second_player_name} =>"
      player2_input = gets.chomp.to_i
    end

    # verify_input

    change_value(player2_input, @second_player_symbol)
    numbers_selected << player2_input.to_i
    current_player = 1

  end
  # if decide_winner == true
  # breaks out from while loop and prints who won

  decide_winner
  turns += 1
  board if turns == 9
  p 'Game finished' if turns == 9
end
